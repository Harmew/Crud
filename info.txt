<form action="">
                    <label for="nome">Nome:</label>
                    <input type="text" name="nome" id="nome">

                    <label for="email">Email:</label>
                    <input type="email" name="email" id="email">
                    
                    <label for="telefone">Telefone:</label>
                    <input type="tel" name="telefone" id="telefone">

                    <label for="nascimento">Nascimento:</label>
                    <input type="date" name="nascimento" id="nascimento">

                    <label for="cpf">CPF:</label>
                    <input type="number" name="cpf" id="cpf">

                    <label for="cpf">CPF:</label>
                    <input type="number" name="cpf" id="cpf">

                    <label for="cep">CEP:</label>
                    <input type="number" name="cep" id="cep">

                    <label for="logradouro">Logradouro:</label>
                    <input type="text" name="logradouro" id="logradouro">

                    <label for="numero">Numero:</label>
                    <input type="number" name="numero" id="numero">

                    <label for="bairro">Bairro:</label>
                    <input type="text" name="bairro" id="bairro">

                    <label for="cidade">Cidade:</label>
                    <input type="text" name="cidade" id="cidade">
            
                    <label for="estado">Estado:</label>
                    <input type="text" name="estado" id="estado">

                    <input type="submit" value="Enviar">
                </form>
                
                






const dltModalOpen = (event) => {
    console.log('clickou')
    //document.querySelector('.deletebtn').dataset.index = event.target.dataset.delete
    
    
    //document.querySelector('.modal').classList.add('active')   
}

const whatsTypeIs = (event) => {
    if(event.target.classList.contains('deletebtn')) 
        removeCliente(event.target.dataset.index)
    else
        dltModalClose()
}

document.querySelectorAll('.clearfix-button').forEach(item => {
    item.addEventListener('click', whatsTypeIs)
})


const btnDelete = document.querySelectorAll('#deletar-client')
btnDelete.forEach(botao => {
    botao.addEventListener('click', dltModalOpen)    
})


const dltModalClose = () => {
    document.querySelector('.modal').classList.remove('active')
}

document.querySelector('.closer-delete')
    .addEventListener('click', dltModalClose)



-----------------------------------------

const openModal = () => {
    document.querySelector('.container-modal')
        .classList.add('active')
}




const listaClientes = async () => {
    return fetch('http://localhost:3000/clients')
        .then(response => response.json())
        .then(body => {
          clientGlance(body)
          return body
        })

    .catch(() => {
        console.log(Error)
    });
}

listaClientes()

//----------------------------------------------------------------------------------------
// READ OK
const clientGlance = (clients) => {
  for(client of clients) {
    const containerBody = document.getElementById('container-body')
    const localClient = document.createElement('div')
    const conteudo = `<div class="dados">
        <p data-td>${client.nome}</p>
        <p>${client.email}</p>
        <p>${client.telefone}</p>
        <p>${client.cpf}</p>
        <a href="./dados.html?id=${client.id}"><i class='bx bx-edit-alt' data-edit></i></a>
                    </div>`
    localClient.innerHTML = conteudo
    localClient.dataset.id = client.id
    containerBody.appendChild(localClient)
  }
}
//----------------------------------------------------------------------------------------
// CREATE OK
const criarClientes = (nome, email, nascimento, telefone, cpf, cep, logradouro, numero, bairro, cidade, estado) => {
    return fetch(`http://localhost:3000/clients`, {
        method: 'POST',
        headers: {
            'Content-type': 'application/json'
        },
        body: JSON.stringify({
            nome: nome,
            email: email,
            telefone: telefone,
            nascimento: nascimento,
            cpf: cpf,
            cep: cep,
            logradouro: logradouro,
            numero: numero,
            bairro: bairro,
            cidade: cidade,
            estado: estado,
        })
    })
}
//--------------------------------------------------------------------------------------------
// DELETE OK
const removeCliente = (id) => {
    return fetch(`http://localhost:3000/clients/${id}`, {
      method: 'DELETE'
    }).then(resposta => {
      if (!resposta.ok) {
        throw new Error('Não foi possivel remover cliente')
      }
    })
}
//----------------------------------------------------------------------------------------------
const editClient = (dados, id) => {
    fetch(`http://localhost:3000/clients/${id}`, {
        method: 'PUT',
        body: JSON.stringify(dados),
        headers: {
        "Content-type": "application/json; charset=UTF-8"
    }
    })
    .then(response => response.json())
    .then(json => console.log(json))
}
//----------------------------------------------------------------------------------------------


/*
fetch(‘http://localhost:3000/clients/${id}', {
method: 'PUT',
body: JSON.stringify(dados),
headers: {
“Content-type”: “application/json; charset=UTF-8”
}
})
.then(response => response.json())
.then(json => console.log(json))


/*

const modifyClient = (client) => {
    let i = client.id
    const clientes = document.querySelectorAll('[data-id]')

    console.log(i)
    console.log(clientes[i])
    
    console.log(client.nome)
}


// EDIT 

const editCliente = (id) => {
    return fetch(`http://localhost:3000/clients/${id}`)
        .then(response => response.json())
        .then(body => { 
            modifyClient(body)
            return body

        })
}




*/


/* 

const ClientData = (index) => {
    const container = document.querySelector('.container-modal')
    container.classList.add('active')
    console.log(listaClientes())
}


const getClientData = (event) => {
    if(event.target.dataset.edit) {
    const value = event.target.dataset.edit
        ClientData(value)
    } else {
        
    
    }
}
*/



/* Eventos */






/*


const detalhaCliente = (id) => {
    return fetch(`http://localhost:3000/profile/${id}`)
      .then(resposta => {
        if (resposta.ok) {
          return resposta.json()
        }
        throw new Error('Não foi possivel detalhar cliente')
    })
}



document.querySelector('.container-body')
    .addEventListener('click', getClientData)
*/

const criarDados = () => {
    openModal()
}




document.querySelector('.adicionar-clientes')
    .addEventListener('click', criarDados)










